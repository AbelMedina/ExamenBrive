@model ML.Producto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>Form</h2>*@

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Productos</h2>
            <h5>Ingrese los datos del producto:</h5>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.IdProducto, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdProducto, new { @class = "hidden form-control" })
                            @Html.ValidationMessageFor(model => model.IdProducto)
                        </div>
                        <div class="col-md-3 col-sm-6">
                            @Html.LabelFor(model => model.Nombre)
                            <div class="input-group">
                                <span class="input-group-addon"><i><img src="~/Content/Icons/Lista.svg" width="20" height="20" /></i></span>
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-6">
                            @Html.LabelFor(model => model.Descripcion)
                            <div class="input-group">
                                <span class="input-group-addon"><i><img src="~/Content/Icons/comentario-alt.svg" width="20" height="20" /></i></span>
                                @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control", @id = "txtDescripcion" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-6">
                            @Html.LabelFor(model => model.Precio)
                            <div class="input-group">
                                <span class="input-group-addon"><i><img src="~/Content/Icons/dolar.svg" width="20" height="20" /></i></span>
                                @Html.TextBoxFor(model => model.Precio, new { @class = "form-control", @id = "txtPrecio" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Precio, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-sm-6">
                            @Html.LabelFor(model => model.Stock)
                            <div class="input-group">
                                <span class="input-group-addon"><i><img src="~/Content/Icons/libro-alt.svg" width="20" height="20" /></i></span>
                                @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", @id = "txtStock" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Stock, null, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3 col-sm-6">
                            @Html.LabelFor(model => model.Imagen)
                            <input type="file" name="ImagenData" onchange="readURL(this);" />
                            @if (Model.Imagen != null)
                            {
                                <img id="ImagenPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />
                            }
                            else
                            {
                                <img id="ImagenPreview" src="~/Content/Images/notFound.png" style="height:100px; width:100px;" />
                            }
                        </div>
                        @Html.HiddenFor(model => model.Imagen)
                    </div>
                    <div class="form-group">
                        <div class="col-md-3 col-sm-6">
                            <br />
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@Scripts.Render("~/Bundles/jquery")
<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#ImagenPreview').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>